generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String       @id @default(cuid())
  email         String?      @unique
  password      String?
  name          String?
  image         String?
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  emailVerified Boolean?     @default(false)
  accounts      Account[]
  Enrollment    Enrollment[]
  events        Event[]
  sessions      Session[]
}

model Event {
  id          Int          @id @default(autoincrement())
  title       String
  description String?
  date        DateTime
  location    String?
  userId      String
  categoryId  Int
  Enrollment  Enrollment[]
  Category    Category     @relation(fields: [categoryId], references: [id])
  user        User         @relation(fields: [userId], references: [id])
}

model Category {
  id    Int     @id @default(autoincrement())
  name  String  @unique
  slug  String  @unique
  Event Event[]
}

model Enrollment {
  id         Int      @id @default(autoincrement())
  userId     String
  eventId    Int
  enrolledAt DateTime @default(now())
  Event      Event    @relation(fields: [eventId], references: [id])
  User       User     @relation(fields: [userId], references: [id])

  @@unique([userId, eventId])
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id])
}
